import fs from 'fs-extra';

/**
 * Check if there are existing files in the editor or backend app path which are not allowed because they might be overwritten.
 *
 * @param {string}      destinationPath Path where the new instance will be created of Fonto Editor, Content Quality, Document History, Review, Schema Compiler, or Spell Checker.
 * @param {string}      templatePath    Path where the template files for the new instance are stored.
 * @param {FdtResponse} res

 * @throws If there are files in the directory path which are not allowed.
 * @returns {Promise<string[]>} Returns the existing filenames and directorynames in the destination directory.
 */
export default async (destinationPath, templatePath, res) => {
	let files;
	try {
		files = await fs.readdir(destinationPath);
	} catch (error) {
		throw new res.ErrorWithInnerError(
			'Destination path does not exist.',
			error
		);
	}

	const templateFiles = await fs.readdir(templatePath);

	// If template includes allowed files, remove them from the array of templateFiles
	// because we don't want to block execution when those files exist
	const allowedFiles = ['package.json', '.gitignore'];

	const conflictingFiles = files.filter(
		(file) => templateFiles.includes(file) && !allowedFiles.includes(file)
	);
	if (conflictingFiles.length) {
		throw new Error(
			`Destination path contains files that conflict with the initialization. Aborting.\nIt concerns the following files: ${conflictingFiles.join(
				', '
			)}.`
		);
	}

	return files;
};
