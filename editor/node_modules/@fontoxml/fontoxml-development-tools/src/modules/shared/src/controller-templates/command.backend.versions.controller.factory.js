/** @typedef {import('../addBackendVersionsCommands').AddBackendVersionsCommandsOptions} AddBackendVersionsCommandsOptions */

/**
 * @param {AddBackendVersionsCommandsOptions} options
 *
 * @returns {(req: FdtRequest, res: FdtResponse) => Promise<void>}
 */
export default function backendVersionsCommandFactory(options) {
	return async function backendVersionsCommand(req, res) {
		res.caption(req.command.getLongName());

		const all = req.options.all;
		const destroySpinner = res.spinner(
			`Retrieving ${all ? 'all ' : ''}${options.productLabel} versions...`
		);
		const sdkVersions = await req.fdt.license.getVersionsForProduct(
			options.licenseProductName
		);
		destroySpinner();
		res.caption(`${options.productLabel} versions`);
		res.list(
			(all ? sdkVersions.getAll() : sdkVersions.getAllStable()).map(
				(version) => version.format()
			),
			'-'
		);
	};
}
