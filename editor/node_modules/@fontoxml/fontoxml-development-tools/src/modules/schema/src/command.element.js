import path from 'path';

export default async (moduleRegistration) => {
	moduleRegistration
		.registerCommand(
			'element',
			path.resolve(
				moduleRegistration.getPath(),
				'src',
				'command.element.controller.js'
			)
		)
		.setDescription(
			'Output schema information about a specific element, including detailed content model info.'
		)

		.setRequiresEditorRepository()
		.setRequiresEditorVersionToMatchFdt()

		.addParameter('element', 'The name of an element.', true)
		.addOption(
			'schema',
			's',
			'In a multi-schema application, specify (a part of) the path to the source schema.json.',
			false
		)

		.addExample(
			`${moduleRegistration.getAppInfo().name} element article`,
			'Output information about the <article> element if the application has only one schema.json.'
		)
		.addExample(
			`${moduleRegistration.getAppInfo().name} element topicref -s map`,
			'Output information about the <topicref> element if the application has one shell in a package named something with "map".'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} element body -s packages/non-standard-schema-package/src/data.json`,
			'Output information about the <body> element from a schema.json in a non-standard location.'
		);
};
