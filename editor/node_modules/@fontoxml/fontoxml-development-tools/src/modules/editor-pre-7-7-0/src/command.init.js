import path from 'path';

const ADDONS_DOCUMENTATION_URL =
	'https://documentation.fontoxml.com/latest/add-ons-03165378ea7b';
const EDITOR_INIT_DOCUMENTATION_URL =
	'https://documentation.fontoxml.com/latest/create-a-base-editor-c34231080298';

export default (moduleRegistration, editorCommand, editorPre770ModulePath) => {
	editorCommand
		.addCommand(
			'init',
			path.resolve(
				editorPre770ModulePath || moduleRegistration.getPath(),
				'src',
				'command.init.controller.js',
			),
		)
		.setDescription('Create a new instance of Fonto Editor.')
		.setLongDescription(
			`See the documentation for help with creating a new Fonto Editor instance at ${EDITOR_INIT_DOCUMENTATION_URL}`
		)

		// This might also use other product licenses, but they are handled remotely.
		.setRequiresLicenseValidation()
		.addRequiredProductLicenses(['editor'])

		.addParameter(
			'output',
			'The path where to initialize the instance. Must be empty, with the exception of some allowed files.'
		)

		.addOption('name', 'n', 'The name of the instance.')
		.addOption(
			'schema',
			's',
			'The directory path where the XSD schema files are located.'
		)
		.addOption(
			new moduleRegistration.MultiOption('add-ons')
				.setDescription(
					`The add-on names to add. See ${ADDONS_DOCUMENTATION_URL} for a list of add-ons.`
				)
				.setShort('a')
				.isRequired(false)
		)

		.addOption(
			'non-interactive',
			undefined,
			'Use input from command line options only, and skip the interactive interface.'
		)

		.addHiddenOption(
			'schema-compiler-base-url',
			undefined,
			'Specify the schema compiler backend base url.'
		)

		.addHiddenOption(
			'output-javascript',
			undefined,
			'Generate JavaScript instead of TypeScript.'
		)

		.addOption(
			'version',
			undefined,
			`The version of Fonto Editor to initialize, which defaults to the same version as FDT. Can be either a specific version within the same minor range of the current FDT version, or a "nightly" version. Be warned: nightly can be unstable or may not work at all.`
		)

		.addExample(
			`${moduleRegistration.getAppInfo().name} editor init`,
			'Create a new Fonto Editor instance in the current directory using the version matching the current FDT version. Will prompt for input.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} editor init path/to/editor`,
			'Create a new Fonto Editor instance in the specified path using the version matching the current FDT version. Will prompt for input.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} editor init --name my-fontoxml-editor --schema ./schema --add-ons fontoxml-dita fontoxml-structure-view --non-interactive`,
			'Create a new Fonto Editor instance in the current directory with the specified name, schema, and add-ons, without prompting for input or confirmation.'
		);
};
