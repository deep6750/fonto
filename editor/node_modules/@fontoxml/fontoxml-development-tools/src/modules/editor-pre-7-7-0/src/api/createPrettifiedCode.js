import babel from '@babel/core';

import prettifyJsFile from '../../../editor/src/helpers/prettifyJsFile.js';
import recastPlugin from '../../../editor/src/babelPlugins/recastPlugin.js';

const t = babel.types;

/**
 * Creates prettified code from the given AST Program node.
 *
 * @param {AstNode} programNode The t.program AST node to write to file.
 *
 * @return {Promise}
 */
export default async function createPrettifiedCode(programNode) {
	if (!programNode || !t.isProgram(programNode)) {
		programNode = t.program([programNode]);
	}

	// Transform the AST to code.
	const jsFile = await babel.transformFromAstAsync(programNode, undefined, {
		babelrc: false,
		comments: true,
		compact: false,
		configFile: false,
		sourceMaps: false,
		plugins: [[recastPlugin, {}]],
	});

	// A filePath is required for prettier to work.
	jsFile.filePath = './dummy-file.ts';
	const prettifiedJsFile = await prettifyJsFile(jsFile);
	return prettifiedJsFile.code;
}
