import path from 'path';

export default (moduleRegistration, editorCommand, editorPre770ModulePath) => {
	const fdtVersion = moduleRegistration.getAppInfo().version;

	editorCommand
		.addCommand(
			'version',
			path.resolve(
				editorPre770ModulePath || moduleRegistration.getPath(),
				'src',
				'command.version.controller.js',
			),
		)
		.setDescription(
			'Shows the version of the current Fonto Editor instance.'
		)

		.setRawOutput()
		.setRequiresEditorRepository()

		.addOption(
			'format',
			'f',
			`Specify the preferred format of the version of the current Fonto Editor instance. Available options are 'full', 'build', 'prerelease', 'core', 'patch', 'minor', and 'major'. By default, provides the 'full' version.`,
			false
		)

		.addExample(
			`${moduleRegistration.getAppInfo().name} editor version`,
			`Outputs the version of the current Fonto Editor instance. E.g. "${moduleRegistration
				.getAppInfo()
				.version.format('core')}".`
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} editor version --format minor`,
			`Outputs the minor of the version of the current Fonto Editor instance. E.g. "${
				fdtVersion.isUnversioned ? '8.2' : fdtVersion.format('minor')
			}".`
		);
};
