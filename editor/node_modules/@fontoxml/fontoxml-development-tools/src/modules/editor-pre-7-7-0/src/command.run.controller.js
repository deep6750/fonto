import fs from 'fs-extra';
import path from 'path';

import executeAndLog from './api/executeAndLog.js';
import npmInstall from './api/npmInstall.js';

const OPTIONS_WITH_VALUE = [
	'body-parser-limit',
	'cache-control-max-age',
	'delay',
	'memory-store-ttl',
	'port',
	'savemode',
];

export default async function editorRunCommand(req, res) {
	res.caption(req.command.getLongName());

	const editorPath = req.fdt.editorRepository.path;

	try {
		await fs.access(
			path.join(editorPath, 'node_modules'),
			fs.constants.R_OK
		);
	} catch (_error) {
		// npm install.
		await npmInstall(editorPath, res);
	}

	const serverOptions = Object.keys(req.options).reduce(
		(options, optionName) => {
			const optionValue = req.options[optionName];
			if (optionValue) {
				if (OPTIONS_WITH_VALUE.includes(optionName)) {
					if (optionValue === true) {
						throw new Error(
							`Option "${optionName}" requires a value.`
						);
					}
					options.push(`--${optionName}`, optionValue);
				} else {
					options.push(`--${optionName}`);
				}
			}

			return options;
		},
		[]
	);

	try {
		await executeAndLog(
			res,
			'npm',
			['run', 'server', '--', ...serverOptions],
			editorPath,
			true,
			true
		);
	} catch (_error) {
		res.error('Development server process stopped unexpectedly.');
	}
}
