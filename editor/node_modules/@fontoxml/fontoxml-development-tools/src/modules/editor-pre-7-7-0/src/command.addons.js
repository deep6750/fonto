import path from 'path';

const ADDONS_DOCUMENTATION_URL =
	'https://documentation.fontoxml.com/latest/add-on-56fcb6851ff4';

export default (moduleRegistration, editorCommand, editorPre770ModulePath) => {
	editorCommand
		.addCommand(
			'add-ons',
			path.resolve(
				editorPre770ModulePath || moduleRegistration.getPath(),
				'src',
				'command.addons.controller.js',
			),
		)
		.setDescription(
			'Add add-ons to, or remove add-ons from, a Fonto Editor instance.'
		)
		.setLongDescription(
			`See the documentation for help with add-ons of a Fonto Editor instance at ${ADDONS_DOCUMENTATION_URL}`
		)

		.setRequiresEditorRepository()
		.setRequiresEditorVersionToMatchFdt()

		// This might also use other product licenses, but they are handled remotely.
		.setRequiresLicenseValidation()
		.addRequiredProductLicenses(['editor'])

		.addOption(
			new moduleRegistration.MultiOption('add-ons')
				.setDescription(
					`The add-on names to use in the Fonto Editor instance. All existing add-ons will be removed. See ${ADDONS_DOCUMENTATION_URL} for a list of add-ons.`
				)
				.setShort('a')
				.isRequired(false)
		)

		.addOption(
			new moduleRegistration.MultiOption('add')
				.setDescription(
					`The add-on names to add to the instance. See ${ADDONS_DOCUMENTATION_URL} for a list of add-ons.`
				)
				.isRequired(false)
		)

		.addOption(
			new moduleRegistration.MultiOption('remove')
				.setDescription(
					`The add-on names to remove from the instance. See ${ADDONS_DOCUMENTATION_URL} for a list of add-ons.`
				)
				.isRequired(false)
		)

		.addOption(
			'non-interactive',
			undefined,
			'Use input from command line options only, and skip the interactive interface.'
		)

		// Flag is deprecated, but kept in code so that no breaking change is made
		// DEV-9386, DEV-10426
		.addHiddenOption(
			'remove-backup',
			'r',
			'Deprecated option to remove backups after completion. In the current version of FDT, backups are never created.'
		)

		.addExample(
			`${moduleRegistration.getAppInfo().name} editor add-ons`,
			'Change the add-ons of the Fonto Editor instance in the current editor repository. Will prompt for input.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} editor add-ons --add-ons fontoxml-dita fontoxml-structure-view --non-interactive`,
			'Change the add-ons of the  Fonto Editor instance in the current repository and replace all existing add-ons with the specified add-ons, without prompting for input or confirmation.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} editor add-ons --add fontoxml-dita fontoxml-structure-view --remove fontoxml-annotations --non-interactive`,
			'Change the add-ons of the Fonto Editor instance in the current repository and add and remove the specified add-ons, without prompting for input or confirmation.'
		);
};
