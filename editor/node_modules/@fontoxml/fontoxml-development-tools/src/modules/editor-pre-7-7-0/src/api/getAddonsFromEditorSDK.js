function createAddon(addon, addonType) {
	return {
		package: addon.package,
		name: addon.name || addon.package,
		description: addon.description,
		openSourceUrl: addon.openSourceUrl,
		isPreview: !!addon.isPreview,
		licenses: addon.licenses,
		dependencies: addon.dependencies,
		addonType,
	};
}

/**
 * Add dependencies to the passed add-ons array for all add-ons in the array which have dependencies.
 *
 * @param {any} sdkManifest
 *
 * @return {Promise<Array<Object>>} The array of add-ons in the array.
 */
export default async function getAddonsFromEditorSDK(sdkManifest) {
	if (!sdkManifest || !sdkManifest['add-ons']) {
		throw new Error('Could not get list of add-ons in SDK.');
	}

	const addons = [];
	for (const addonType in sdkManifest['add-ons']) {
		const addonsForType = sdkManifest['add-ons'][addonType].map((addon) =>
			createAddon(addon, addonType)
		);
		addons.push(...addonsForType);
	}

	return addons;
}
