import fs from 'fs-extra';

/**
 * Creates the config/fonto-manifest.js file.
 *
 * @param {string} manifestPath     The path to the manifest file.
 * @param {string[]} addons         The addons to include in the manifest file.
 * @param {string[]} editorPackages The editor packages to include in the manifest file.
 *
 * @return {Promise}
 */
export default async function createConfigFontoManifest(
	manifestPath,
	addons,
	editorPackages
) {
	let dependencies = Object.create(null);

	['fontoxml-platform-base'].concat(addons).forEach((addon) => {
		dependencies[addon] = `platform/${addon}`;
	});

	editorPackages.concat(['editor-masthead']).forEach((packageName) => {
		dependencies[packageName] = `packages/${packageName}`;
	});

	// Alphabetically sort the dependencies.
	dependencies = Object.keys(dependencies)
		.sort()
		.reduce((sortedDependencies, oldDependency) => {
			const oldDependencyPath = dependencies[oldDependency];
			sortedDependencies[oldDependency] = oldDependencyPath;
			return sortedDependencies;
		}, Object.create(null));

	const configManifest = { dependencies };
	await fs.writeJson(manifestPath, configManifest, { spaces: '\t' });
}
