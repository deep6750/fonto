import fs from 'fs-extra';
import fastGlob from 'fast-glob';
import path from 'path';

import getMessagesFromOperation from './getMessagesFromOperation.js';

function readOperationsFromJson(path) {
	return fs
		.readJson(path)
		.then((byName) =>
			Object.keys(byName).map((name) => ({ ...byName[name], name })),
		);
}

/**
 * @param  {{name: string, path: string}}  pkg
 *
 * @return  {Promise.<Message[]>}
 */
export default async function getOperationMessages(pkg) {
	const pattern =
		pkg.name === 'config' ? 'operations?(-*).json' : 'src/operations?(-*).json';
	const operationsFiles = await fastGlob(pattern, { cwd: pkg.path });
	const messagesForPackages = await Promise.all(
		operationsFiles.map(async (operationFile) => {
			const operations = await readOperationsFromJson(
				path.join(pkg.path, operationFile),
			);
			return operations.flatMap((operation) =>
				getMessagesFromOperation(operation, pkg.name, operationFile),
			);
		}),
	);
	return messagesForPackages.flat();
}
