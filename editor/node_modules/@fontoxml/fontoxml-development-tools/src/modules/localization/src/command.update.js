import path from 'path';

export default async (moduleRegistration, localizationCommand) => {
	localizationCommand
		.addCommand(
			'update',
			path.resolve(
				moduleRegistration.getPath(),
				'src',
				'command.update.controller.js'
			)
		)
		.setDescription('Update message bundle with a new template bundle.')
		// TODO: does this keep the local messages?

		// Set to raw output when the output-to-stdout option is set.
		.setRawOutput((request) => !!request.options['output-to-stdout'])

		.addParameter('input', 'The message bundle to update.', true)

		.addParameter(
			'template',
			'The message (template) bundle to use for updating the message bundle.',
			true
		)

		.addOption(
			'output-to-stdout',
			'o',
			'If omitted, will output to input.',
			false
		)

		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization update packages/localization/messages.en-US.json messages-template.json`,
			'Update message.en-US.json in the localization package using the messages-template.json message template bundle.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization update packages/localization/messages.en-US.json messages-template.json --output-to-stdout`,
			'Update message.en-US.json in the localization package using the messages-template.json message template bundle, and output the updated message bundle to stdout.'
		);
};
