import path from 'path';

import createMessagesTable from './api/createMessagesTable.js';

export default async (moduleRegistration, localizationCommand) => {
	const table = await createMessagesTable(moduleRegistration);

	localizationCommand
		.addCommand(
			'messages',
			path.resolve(
				moduleRegistration.getPath(),
				'src',
				'command.messages.controller.js'
			)
		)
		.setDescription(
			'Output a table with information about all messages in a message (template) bundle.'
		)
		.setLongDescription(
			'Most of the options can be combined to find specific messages.'
		)

		.addParameter(
			'bundle',
			'The message (template) bundle to read from.',
			true
		)

		.addOption(
			'search-in',
			'i',
			'Only show messages where the in message contains the specified text.'
		)
		.addOption(
			'search-out',
			'o',
			'Only show messages where the out message contains the specified text.'
		)
		.addOption(
			'search-package',
			'p',
			'Only show messages where the package name contains the specified text.'
		)
		.addOption(
			'search-file',
			'f',
			'Only show messages where the source file name contains the specified text.'
		)

		.addOption(
			'with-conflicts',
			null,
			'Only show message which have conflicts.'
		)
		.addOption(
			'without-conflicts',
			null,
			'Only show message which have no conflicts.'
		)
		.addOption(
			'with-out',
			null,
			'Only show message which have a translation.'
		)
		.addOption(
			'without-out',
			null,
			'Only show message which have no translation.'
		)

		.addOption(
			'no-table',
			null,
			'Output as definitions instead of a table.'
		)

		.addOption(table.sortOption)
		.addOption(table.columnsOption)
		.addOption(table.exportOption)

		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages messages-template.json`,
			'Output information about all the messages in the messages-template.json message template bundle.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json`,
			'Output information about all the messages in the messages.en-US.json message bundle.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --search-in cancel`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages where the original text contains the text "cancel".'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --search-out annuleren`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages where the localized text contains the text "annuleren".'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --search-package my-package`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages from a packages containing the text "my-package".'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --with-conflicts`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages with conflicts.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --without-out`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages without localized text.'
		)
		.addExample(
			`${
				moduleRegistration.getAppInfo().name
			} localization messages packages/localization/messages.en-US.json --search-in cancel --no-table`,
			'Output information about messages in the messages-template.json message template bundle, showing only messages where the original text contains the text "cancel", in a non table format.'
		);
};
