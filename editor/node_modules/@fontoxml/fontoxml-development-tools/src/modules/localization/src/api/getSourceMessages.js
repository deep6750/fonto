import fs from 'fs/promises';
import fastGlob from 'fast-glob';
import path from 'path';

import getMessagesFromSource from './getMessagesFromSource.js';

const sourceFilesGlob = '*.@(js|jsx|ts|tsx)';

/**
 * @param  {{name: string, path: string}}     pkg
 * @param  {{includeLineAndColumn: boolean}}  options
 *
 * @return  {Promise.<Message[]>}
 */
export default async function getSourceMessages(pkg, options) {
	const pattern =
		pkg.name === 'config'
			? `**/${sourceFilesGlob}`
			: `src/**/${sourceFilesGlob}`;

	const sourceFiles = await fastGlob(pattern, { cwd: pkg.path });
	const messagesForPackage = await Promise.all(
		sourceFiles.map(async (sourceFile) => {
			const source = await fs.readFile(path.join(pkg.path, sourceFile), 'utf8');
			return getMessagesFromSource(
				source,
				pkg.name,
				sourceFile,
				options.includeLineAndColumn,
			);
		}),
	);
	return messagesForPackage.flat();
}
