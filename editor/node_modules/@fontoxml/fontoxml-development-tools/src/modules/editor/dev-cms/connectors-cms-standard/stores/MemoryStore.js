import path from 'path';

export default class MemoryStore {
	constructor() {
		this._documentById = Object.create(null);
	}

	existsSync(documentId) {
		return !!this._documentById[documentId];
	}

	load(documentId, callback) {
		const document = this._documentById[documentId];
		if (!document) {
			const error = new Error('File does not exist.');
			error.status = 404;
			callback(error);
			return;
		}

		callback(null, document.content);
	}

	save(documentId, content, callback) {
		let document = this._documentById[documentId];
		if (!document) {
			document = this._documentById[documentId] = {
				id: documentId,
				type: 'document',
				label: path.basename(documentId),
				metadata: {},
			};
		}

		document.content = content;

		callback(null);
	}

	removeSync(documentId) {
		delete this._documentById[documentId];
	}

	listSync(folderId) {
		const items = Object.keys(this._documentById).filter(
			(documentId) => path.dirname(documentId) === folderId
		);
		return items.length ? items : null;
	}
}
