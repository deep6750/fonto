import configureBodyParserMiddleware from './configureBodyParserMiddleware.js';
import configureConnectorsCmsStandardAssetRouter from './configureConnectorsCmsStandardAssetRouter.js';
import configureConnectorsCmsStandardBrowseRouter from './configureConnectorsCmsStandardBrowseRouter.js';
import configureConnectorsCmsStandardDocumentRouter from './configureConnectorsCmsStandardDocumentRouter.js';
import configureConnectorsCmsStandardHeartbeatRouter from './configureConnectorsCmsStandardHeartbeatRouter.js';
import configureConnectorsCmsStandardProfileRouter from './configureConnectorsCmsStandardProfileRouter.js';
import configureConnectorsCmsStandardProxyRouter from './configureConnectorsCmsStandardProxyRouter.js';
import configureConnectorsCmsStandardReferenceRouter from './configureConnectorsCmsStandardReferenceRouter.js';
import configureConnectorsCmsStandardReviewRouter from './configureConnectorsCmsStandardReviewRouter.js';
import configureConnectorsCmsStandardRouter from './configureConnectorsCmsStandardRouter.js';
import configureDevelopmentCmsMiddleware from './configureDevelopmentCmsMiddleware.js';
import configureSimulatedDelayMiddleware from './configureSimulatedDelayMiddleware.js';
import configureUploadMiddleware from './configureUploadMiddleware.js';
/**
 * After the default middleware is set we call our default routers and get our routes back.
 *
 * @param  {Object}                      config
 * @param  {function(req, res, next)[]}  additionalMiddleware
 *
 * @return  {function(req, res, next)[]}
 */
export default function createMiddleware(config, additionalMiddleware) {
	const middleware = [
		configureDevelopmentCmsMiddleware(config),
		configureSimulatedDelayMiddleware(config),
		configureBodyParserMiddleware(config),
		configureUploadMiddleware(config),
	];

	if (additionalMiddleware && additionalMiddleware.length > 0) {
		middleware.push(additionalMiddleware);
	}

	return middleware.concat([
		configureConnectorsCmsStandardRouter(config),
		configureConnectorsCmsStandardAssetRouter(config),
		configureConnectorsCmsStandardBrowseRouter(config),
		configureConnectorsCmsStandardDocumentRouter(config),
		configureConnectorsCmsStandardHeartbeatRouter(config),
		configureConnectorsCmsStandardProfileRouter(config),
		configureConnectorsCmsStandardProxyRouter(config),
		configureConnectorsCmsStandardReferenceRouter(config),
		configureConnectorsCmsStandardReviewRouter(config),
	]);
}
