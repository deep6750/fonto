import fs from 'fs-extra';
import path from 'path';
import { performance } from 'perf_hooks';

import convertEditorWithOutput from './api/convertEditorWithOutput.js';
import { promptConfirm } from '../../../editor-pre-7-7-0/src/api/enquirerPrompts.js';

export default async function editorConvertEditorCommand(req, res) {
	res.caption(req.command.getLongName());

	const editorPath = req.fdt.editorRepository.path;
	const doNotOverwrite = !!req.options['no-overwrite'];
	const doNotSaveWarnings = !!req.options['no-save-warnings'];
	const paths = {
		inputDir: editorPath,
		outputDir: doNotOverwrite
			? path.join(editorPath, '..', `${path.basename(process.cwd())}-out`)
			: editorPath,
	};

	res.properties({
		'Overwrite in place': !doNotOverwrite,
		'Save warnings': !doNotSaveWarnings,
		'Input path': paths.inputDir,
		'Output path': paths.outputDir,
	});
	res.break();

	if (
		!doNotOverwrite &&
		!(await promptConfirm(
			'The conversion will overwrite all files in the working directory, are you sure you want to continue?',
		))
	) {
		res.break();
		res.notice('Aborted');
		return;
	}

	res.break();

	const startTime = performance.now();

	if (doNotOverwrite) {
		await fs.emptyDir(paths.outputDir);
		await fs.copy(paths.inputDir, paths.outputDir, { dereference: true });
	}

	await convertEditorWithOutput(paths.outputDir, doNotSaveWarnings, res);

	const endTime = performance.now();
	res.success(`\nDone. (${Math.round(endTime - startTime)} ms)`);
}
