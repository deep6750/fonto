/** @typedef {import('webpack').Compiler} Compiler */

import getDependenciesInLoadOrder from '../getDependenciesInLoadOrder.js';

/**
 * This plugin exposes Fonto Editor's dependency tree through webpack's
 * compilation objects for use by other plugins.
 */
export default class DependenciesInLoadOrderPlugin {
	constructor(options) {
		this.options = options;
	}

	/**
	 * @param {Compiler} compiler
	 */
	apply(compiler) {
		// Listen to thisCompilation hook and get dependencies in load order once per compilation.
		compiler.hooks.thisCompilation.tap(
			DependenciesInLoadOrderPlugin.name,
			(compilation) => {
				try {
					const packageRootFolders = this.options.packageRootFolders;
					const rootPackageName = this.options.rootPackageName;
					const rootPackagePath = this.options.rootPackagePath;

					// TODO: Make async because we do file operations in here.
					compilation.packagesInfoInLoadOrder =
						getDependenciesInLoadOrder(
							packageRootFolders,
							rootPackagePath,
							rootPackageName
						);

					compilation.packagesInfoInLoadOrderError = null;
				} catch (error) {
					// Do not directly push the error to compilation errors, but let consumers
					// handle errors themselves.
					compilation.packagesInfoInLoadOrder = null;
					compilation.packagesInfoInLoadOrderError = error;
				}
			}
		);
	}
}
