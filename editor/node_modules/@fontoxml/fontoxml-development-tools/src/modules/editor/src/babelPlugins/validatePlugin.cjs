const isRequireToUrlCallExpression = require('../astHelpers/isRequireToUrlCallExpression.cjs');
const isInvalidTextLoaderImportDeclaration = require('../astHelpers/isInvalidTextLoaderImportDeclaration.cjs');

const INVALID_REQUIRE_TO_URL = `Unsupported 'require.toUrl()' detected.`;
const INVALID_TEXT_LOADER = `Unsupported 'text!' loader in combination with a '.json' file import.`;

module.exports = function validatePlugin(_babel, options, _cwd) {
	return {
		visitor: {
			CallExpression(path) {
				if (isRequireToUrlCallExpression(path)) {
					options.warningsByFilename.add(
						this.file.opts.filename,
						path.buildCodeFrameError(INVALID_REQUIRE_TO_URL)
					);
				}
			},

			ImportDeclaration(path) {
				if (isInvalidTextLoaderImportDeclaration(path)) {
					options.warningsByFilename.add(
						this.file.opts.filename,
						path
							.get('source')
							.buildCodeFrameError(INVALID_TEXT_LOADER)
					);
				}
			},
		},
	};
};
