module.exports = function isRequireToUrlCallExpression(path) {
	// Get all parts.
	const callee = path.get('callee');
	const object = callee.get('object');
	const property = callee.get('property');

	// Is a call to require.toUrl().
	//
	// Correct:
	//            require.toUrl('assets/MathJax')
	// path       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  (CallExpression)
	// callee     ^^^^^^^^^^^^^                    (MemberExpression)
	//  .object   ^^^^^^^                          (Identifier, with name 'require')
	//  .property         ^^^^^                    (Identifier, with name 'toUrl')
	//
	// Incorrect:
	//            something.test('assets/MathJax')
	// callee
	//  .object   ^^^^^^^^^                        (Identifier, with name 'something')
	//  .property           ^^^^                   (Identifier, with name 'test')
	if (
		!callee.isMemberExpression() ||
		!object.isIdentifier({ name: 'require' }) ||
		!property.isIdentifier({ name: 'toUrl' })
	) {
		return false;
	}

	// Check if there is no local binding in the current Program named 'require'.
	//
	// Correct:
	//           require.toUrl();
	//  path     ^^^^^^^^^^^^^^^^                         (CallExpression)
	//
	// Incorrect:
	//           var require = { toUrl: function () {} };
	//  binding0     ^^^^^^^                              (Identifier)
	//           require.toUrl();
	//  path     ^^^^^^^^^^^^^^^^                         (CallExpression)
	if (path.scope.hasBinding('require')) {
		return false;
	}

	return true;
};
