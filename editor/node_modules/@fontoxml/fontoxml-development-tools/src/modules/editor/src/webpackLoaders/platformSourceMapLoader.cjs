const fs = require('fs-extra');
const path = require('path');

let compilation;
let sourceMapsPromise;

function normalisePath(pathToNormalize) {
	return path.normalize(pathToNormalize).replace(/\\+/g, path.posix.sep);
}

module.exports = async function (input) {
	this.cacheable(true);

	const { platformFolder, platformSourceMapFile } = this.getOptions();

	const callback = this.async();

	function untouched() {
		return callback(null, input, undefined);
	}

	if (compilation !== this._compilation) {
		compilation = this._compilation;
		sourceMapsPromise = fs.readJson(platformSourceMapFile);
	}

	let sourceMaps;
	try {
		sourceMaps = await sourceMapsPromise;
	} catch (_error) {
		return untouched();
	}

	const sourcePath = normalisePath(
		path.relative(platformFolder, this.resourcePath)
	);
	const sourceMap = sourceMaps[sourcePath];

	if (!sourceMap) {
		return untouched();
	}

	sourceMap.sources = sourceMap.sources.map((source) =>
		// @TODO: Should this also be in posix format?
		path.resolve(platformFolder, path.normalize(source))
	);

	return callback(null, input, sourceMap);
};
