const moveComments = require('../astHelpers/moveComments.cjs');

module.exports = (babel, _options, _cwd) => {
	const { types: t } = babel;

	return {
		visitor: {
			StringLiteral(path) {
				// Guard against string literals that aren't in an import declaration.
				if (!t.isImportDeclaration(path.getStatementParent())) {
					return;
				}

				// Check if the source value starts with `text!` and ends with `.svg`.
				const source = path.node.value;
				if (!source.startsWith('text!') || !source.endsWith('.svg')) {
					return;
				}

				// Replace the string literal without the text! prefix.
				const sourceNode = t.stringLiteral(source.substr(5));
				moveComments.asIs(babel, sourceNode, path.node);
				path.replaceWith(sourceNode);
			},
		},
	};
};
