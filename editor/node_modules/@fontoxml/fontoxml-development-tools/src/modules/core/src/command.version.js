export default (moduleRegistration, _app) => {
	async function moduleController(req, res) {
		const format =
			req.options.format === true ? 'full' : req.options.format;
		res.raw(req.fdt.version.format(format));
	}

	const fdtVersion = moduleRegistration.getAppInfo().version;
	moduleRegistration
		.registerCommand('version', moduleController)
		.setDescription('Output the current FDT version.')
		.addOption(
			'format',
			'f',
			`Specify the preferred format of the version. Available options are 'full', 'build', 'prerelease', 'core', 'patch', 'minor', and 'major'. By default, provides the 'full' version.`,
			false
		)
		.setRawOutput()
		.addExample(
			`${moduleRegistration.getAppInfo().name} version`,
			`Outputs the current FDT version, e.g. "${moduleRegistration
				.getAppInfo()
				.version.format('core')}".`
		)
		.addExample(
			`${moduleRegistration.getAppInfo().name} version --format minor`,
			`Outputs the minor of the current FDT version, e.g. "${
				fdtVersion.isUnversioned ? '8.2' : fdtVersion.format('minor')
			}".`
		);
};
